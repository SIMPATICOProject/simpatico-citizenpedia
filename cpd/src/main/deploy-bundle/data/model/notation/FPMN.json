{
  "notation": "model.notation.FPMN",
  "name": "Formal Procedure Model and Notation",
  "description": "",
  "params": {
    "poolHeaderHeight": 40,
    "labelWidth": 220,
    "phaseHeight": 120,
    "phaseArrowWidth": 40
  },
  "stencils": [
    {
      "diagramClass": "diagram.Shape",
      "modelClass": "model.FPMN.Procedure",
      "type": "node",
      "safeArea": {
        "x": "diagram.bounds.x",
        "y": "diagram.bounds.y",
        "width": "diagram.bounds.width",
        "height": "params.poolHeaderHeight"
      },
      "view": {
        "silhouette": {
          "type": "rect",
          "attrs": {
            "x": "diagram.bounds.x",
            "y": "diagram.bounds.y",
            "width": "diagram.bounds.width",
            "height": "diagram.bounds.height"
          }
        },
        "paints": [
          {
            "type": "rect",
            "attrs": {
              "x": "diagram.bounds.x",
              "y": "diagram.bounds.y",
              "width": "diagram.bounds.width",
              "height": "diagram.bounds.height"
            },
            "styles": {
              "stroke-width": "2"
            }
          }
        ],
        "icons": [],
        "iconSets": [],
        "label": {
          "attrs": {
            "x": "diagram.bounds.x",
            "y": "diagram.bounds.y",
            "width": "diagram.bounds.width",
            "height": "params.poolHeaderHeight"
          },
          "align": {
            "h": "center",
            "v": "middle"
          },
          "text": {
            "dependsOn": [
              "name"
            ],
            "value": "model.name"
          },
          "styles": {
            "font-weight": "'bold'"
          }
        },
        "texts": []
      },
      "roles": [
        "minInstances",
        "maxInstances"
      ],
      "properties": {
      }
    },
    {
      "diagramClass": "diagram.Shape",
      "modelClass": "model.FPMN.Phase",
      "type": "node",
      "safeArea": {
        "x": "diagram.bounds.x + (model.prevPhaseId ? params.phaseArrowWidth : 0)",
        "y": "diagram.bounds.y",
        "width": "diagram.bounds.width - (model.prevPhaseId ? params.phaseArrowWidth : 0) - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
        "height": "diagram.bounds.height"
      },
      "view": {
        "silhouette": {
          "type": "path",
          "attrs": {
            "path": [
              {
                "x": "diagram.bounds.x",
                "y": "diagram.bounds.y"
              },
              {
                "x": "diagram.bounds.x + diagram.bounds.width - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
                "y": "diagram.bounds.y"
              },
              {
                "x": "diagram.bounds.x + diagram.bounds.width",
                "y": "diagram.bounds.y + diagram.bounds.height / 2"
              },
              {
                "x": "diagram.bounds.x + diagram.bounds.width - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
                "y": "diagram.bounds.y + diagram.bounds.height"
              },
              {
                "x": "diagram.bounds.x",
                "y": "diagram.bounds.y + diagram.bounds.height"
              },
              {
                "x": "diagram.bounds.x + (model.prevPhaseId ? params.phaseArrowWidth : 0)",
                "y": "diagram.bounds.y + diagram.bounds.height / 2"
              }
            ]
          }
        },
        "paints": [
          {
            "type": "path",
            "attrs": {
              "path": [
                {
                  "x": "diagram.bounds.x",
                  "y": "diagram.bounds.y"
                },
                {
                  "x": "diagram.bounds.x + diagram.bounds.width - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
                  "y": "diagram.bounds.y"
                },
                {
                  "x": "diagram.bounds.x + diagram.bounds.width",
                  "y": "diagram.bounds.y + diagram.bounds.height / 2"
                },
                {
                  "x": "diagram.bounds.x + diagram.bounds.width - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
                  "y": "diagram.bounds.y + diagram.bounds.height"
                },
                {
                  "x": "diagram.bounds.x",
                  "y": "diagram.bounds.y + diagram.bounds.height"
                },
                {
                  "x": "diagram.bounds.x + (model.prevPhaseId ? params.phaseArrowWidth : 0)",
                  "y": "diagram.bounds.y + diagram.bounds.height / 2"
                }
              ]
            }
          }
        ],
        "icons": [],
        "iconSets": [
          {
            "basePoint": {
              "x": "diagram.bounds.x + (model.prevPhaseId ? params.phaseArrowWidth : 0) + 2",
              "y": "diagram.bounds.y + 2"
            },
            "settings": {
              "width": 24,
              "height": 24,
              "h": "left",
              "v": "top",
              "direction": "right"
            },
            "refs": [
              {
                "id": "graphics-e-service",
                "display": {
                  "dependsOn": [
                    "eServiceId"
                  ],
                  "value": "model.eServiceId != null"
                },
                "styles": {}
              }
            ]
          }
        ],
        "label": {
          "attrs": {
            "x": "diagram.bounds.x + (model.prevPhaseId ? params.phaseArrowWidth : 0)",
            "y": "diagram.bounds.y",
            "width": "diagram.bounds.width - (model.prevPhaseId ? params.phaseArrowWidth : 0) - (model.nextPhaseId ? params.phaseArrowWidth : 0)",
            "height": "diagram.bounds.height"
          },
          "align": {
            "h": "center",
            "v": "middle"
          },
          "text": {
            "dependsOn": [
              "name"
            ],
            "value": "model.name"
          }
        },
        "texts": []
      },
      "roles": [
        "minInstances",
        "hasParent"
      ],
      "properties": {
      }
    }
  ],
  "rules": {
    "minInstances": {
      "model.FPMN.Procedure": 1,
      "model.FPMN.Phase": 1
    },
    "maxInstances": {
      "model.FPMN.Procedure": 1
    },
    "hasParent": {
      "model.FPMN.Phase": [
        "model.FPMN.Procedure"
      ]
    }
  }
}
