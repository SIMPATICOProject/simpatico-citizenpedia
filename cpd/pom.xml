<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.beng</groupId>
        <artifactId>microservice-stack</artifactId>
        <version>1.3-SNAPSHOT</version>
    </parent>

    <artifactId>cpd-server</artifactId>
    <packaging>jar</packaging>

    <name>beng Modeler Server</name>

    <properties>
        <main.verticle>it.beng.modeler.microservice.ModelerConfigVerticle</main.verticle>
    </properties>

    <profiles>
        <profile>
            <id>develop</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cpd.develop>true</cpd.develop>
                <config.properties.file>develop.properties</config.properties.file>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <cpd.develop>false</cpd.develop>
                <config.properties.file>production.properties</config.properties.file>
            </properties>
        </profile>
        <profile>
            <id>dev-p</id>
            <properties>
                <cpd.develop>false</cpd.develop>
                <config.properties.file>develop.properties</config.properties.file>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>beng-public</id>
            <url>http://nexus.business-engineering.it/nexus/repository/maven-public/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.beng</groupId>
                <artifactId>microservice-common</artifactId>
                <version>${project.parent.version}</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>it.beng</groupId>
            <artifactId>microservice-common</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-codegen</artifactId>
        </dependency>
        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- 1. copy unfiltered resources -->
            <!-- 1.1 copy ROOT/assets/**/* into deploy-bundle/assets -->
            <resource>
                <directory>src/main/deploy-bundle/web/ROOT/assets</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <targetPath>../deploy-bundle/web/assets</targetPath>
            </resource>
            <!-- 1.2 copy all remaining resources except those to be filtered -->
            <resource>
                <directory>src/main/deploy-bundle</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>conf/config.json</exclude>
                    <exclude>web/assets/conf/*.json</exclude>
                    <exclude>web/assets/swagger/*.json</exclude>
                    <exclude>web/swagger-ui/swagger.json</exclude>
                    <exclude>web/ROOT/**/index.html</exclude>
                    <exclude>web/ROOT/assets/**/*</exclude>
                </excludes>
                <targetPath>../deploy-bundle</targetPath>
            </resource>
            <!-- 1.3 exclude cluster.xml from standard copy (it needs to be filtered) -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>cluster.xml</exclude>
                </excludes>
            </resource>
            <!-- 2. copy filtered resources -->
            <!-- 2.1 filter deploy-bundle resources -->
            <resource>
                <directory>src/main/deploy-bundle</directory>
                <filtering>true</filtering>
                <includes>
                    <include>conf/config.json</include>
                    <include>web/assets/conf/*.json</include>
                    <include>web/assets/swagger/*.json</include>
                    <include>web/swagger-ui/swagger.json</include>
                    <include>web/ROOT/**/index.html</include>
                </includes>
                <targetPath>../deploy-bundle</targetPath>
            </resource>
            <!-- 2.1 filter cluster.xml -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>cluster.xml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
<!-- 
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <debug>${cpd.develop}</debug>
                        <debugLevel>lines,vars,source</debugLevel>
                    </configuration>                
            </plugin>
 -->
            <plugin>
                <!-- copy the cluster configuration -->
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- plugin to create a `fat-jar` -->
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>read-properties</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${config.properties.file}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
